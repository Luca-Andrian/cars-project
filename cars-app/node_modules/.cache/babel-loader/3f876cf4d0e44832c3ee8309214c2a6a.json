{"ast":null,"code":"var _jsxFileName = \"/home/luca/React/cars-project/cars-app/src/app/containers/SignleCar/commentSection.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useForm } from \"react-hook-form\";\nimport { Comment } from \"./Comment\";\nimport { firebase } from '../../../firebase/firebase';\nimport 'firebase/compat/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageContainer = styled.div`\n    ${{\n  \"display\": \"flex\",\n  \"flexDirection\": \"column\",\n  \"width\": \"100%\",\n  \"height\": \"100%\",\n  \"alignItems\": \"center\",\n  \"overflowX\": \"hidden\"\n}}\n`;\n_c = PageContainer;\nconst FormComment = styled.form`\n    ${{\n  \"width\": \"16rem\",\n  \"height\": \"10rem\",\n  \"maxWidth\": \"32rem\",\n  \"margin\": \"auto\",\n  \"textAlign\": \"center\"\n}}\n`;\n_c2 = FormComment;\nconst Text = styled.textarea`\n    ${{\n  \"borderStyle\": \"solid\",\n  \"--tw-border-opacity\": \"1\",\n  \"borderColor\": \"rgba(209, 213, 219, var(--tw-border-opacity))\",\n  \"borderWidth\": \"1px\",\n  \"width\": \"100%\",\n  \"borderRadius\": \"0.25rem\",\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(55, 65, 81, var(--tw-text-opacity))\"\n}}\n`;\n_c3 = Text;\nconst Button = styled.button`\n    ${{\n  \"width\": \"8rem\",\n  \"marginTop\": \"0.25rem\",\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(255, 255, 255, var(--tw-text-opacity))\",\n  \"--tw-bg-opacity\": \"1\",\n  \"backgroundColor\": \"rgba(239, 68, 68, var(--tw-bg-opacity))\",\n  \":hover\": {\n    \"--tw-bg-opacity\": \"1\",\n    \"backgroundColor\": \"rgba(251, 191, 36, var(--tw-bg-opacity))\"\n  },\n  \"borderWidth\": \"1px\",\n  \"paddingTop\": \"0.5rem\",\n  \"paddingBottom\": \"0.5rem\",\n  \"paddingLeft\": \"1rem\",\n  \"paddingRight\": \"1rem\",\n  \"fontWeight\": \"600\",\n  \"borderRadius\": \"0.25rem\"\n}}\n`;\n_c4 = Button;\nconst Author = styled.p`\n  ${{\n  \"marginTop\": \"2.5rem\",\n  \"width\": \"8rem\",\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(0, 0, 0, var(--tw-text-opacity))\",\n  \"fontWeight\": \"600\",\n  \"borderRadius\": \"0.25rem\"\n}}\n`;\nconst CommentText = styled.p`\n  ${{\n  \"fontSize\": \"0.875rem\",\n  \"lineHeight\": \"1.25rem\",\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(107, 114, 128, var(--tw-text-opacity))\",\n  \"width\": \"100%\"\n}}\n`;\nconst AlertComment = styled.p`\n  ${{\n  \"fontSize\": \"0.875rem\",\n  \"lineHeight\": \"1.25rem\",\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(107, 114, 128, var(--tw-text-opacity))\"\n}}\n`;\n_c5 = AlertComment;\nexport function CommentSection(props) {\n  _s();\n\n  const [comments, setComments] = useState(props['items']);\n  const [isSingIn, setSingIn] = useState([]);\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      return setSingIn(user);\n    } else {\n      return setSingIn(false);\n    }\n  });\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n\n  const onSubmit = (data, e) => {\n    const newComments = [{\n      author: isSingIn.displayName,\n      text: data.text\n    }, ...comments];\n    setComments(newComments);\n    reset();\n  };\n\n  if (isSingIn) {\n    return /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormComment, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Text, { ...register(\"text\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Commenter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, { ...comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 44\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: /*#__PURE__*/_jsxDEV(AlertComment, {\n        children: \"Vous devez vous connecter pour voir les commentaires....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(CommentSection, \"5UIN6XaMr07kMNf9H23BCGy2iAE=\", false, function () {\n  return [useForm];\n});\n\n_c6 = CommentSection;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"FormComment\");\n$RefreshReg$(_c3, \"Text\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"AlertComment\");\n$RefreshReg$(_c6, \"CommentSection\");","map":{"version":3,"sources":["/home/luca/React/cars-project/cars-app/src/app/containers/SignleCar/commentSection.tsx"],"names":["React","useState","styled","useForm","Comment","firebase","PageContainer","div","FormComment","form","Text","textarea","Button","button","Author","p","CommentText","AlertComment","CommentSection","props","comments","setComments","isSingIn","setSingIn","auth","onAuthStateChanged","user","register","handleSubmit","reset","onSubmit","data","e","newComments","author","displayName","text","map","comment"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport tw from 'twin.macro';\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { IComment } from \"../../../typings/comment\";\nimport { Comment } from \"./Comment\";\nimport { firebase } from '../../../firebase/firebase';\nimport 'firebase/compat/auth';\n\ninterface ICommentProps extends IComment {}\n\nconst PageContainer = styled.div`\n    ${tw`\n        flex\n        flex-col\n        w-full\n        h-full\n        items-center\n        overflow-x-hidden\n    `}\n`;\n\nconst FormComment = styled.form`\n    ${tw`\n        w-64\n        h-40\n        max-w-lg\n        m-auto\n        text-center\n    `}\n`;\n\nconst Text = styled.textarea`\n    ${tw`\n        border-solid\n        border-gray-300\n        border\n        w-full\n        rounded\n        text-gray-700\n    `}\n`;\n\nconst Button = styled.button`\n    ${tw`\n        w-32\n        mt-1\n        text-white\n        bg-red-500\n        hover:bg-yellow-400\n        border\n        py-2\n        px-4\n        font-semibold\n        rounded\n    `}\n`;\n\ntype FormValues = {\n    text: string;\n  };\n\nconst Author = styled.p`\n  ${tw`\n      mt-10\n      w-32\n      text-black\n      font-semibold\n      rounded\n  `}\n`;\n\nconst CommentText = styled.p`\n  ${tw`\n      text-sm\n      text-gray-500\n      w-full\n  `}\n`;\n\nconst AlertComment = styled.p`\n  ${tw`\n    text-sm\n    text-gray-500\n  `}\n`\n\n\nexport function CommentSection(props: {items: []}) {\n\n    const [comments, setComments] = useState(props['items'] as any[]);\n    const [isSingIn, setSingIn] = useState([] as any)\n    firebase.auth().onAuthStateChanged((user)=>{\n        if(user){\n            return setSingIn(user)\n        }else{\n            return setSingIn(false)\n        }\n    })\n    const { register, handleSubmit, reset } = useForm<FormValues>();\n    const onSubmit: SubmitHandler<FormValues> = (data, e) => {\n        const newComments = [{author: isSingIn.displayName, text: data.text}, ...comments];\n        setComments(newComments);\n        reset()\n    };\n\n    if(isSingIn) {\n        return (\n            <PageContainer>\n                <FormComment onSubmit={handleSubmit(onSubmit)}>\n                    <Text {...register(\"text\")}/>\n                    <Button type=\"submit\">Commenter</Button>\n                </FormComment>\n                {comments.map((comment) => <Comment {...comment}/>)}\n            </PageContainer>\n        )\n    } else {\n        return (\n            <PageContainer>\n                <AlertComment>Vous devez vous connecter pour voir les commentaires....</AlertComment>\n            </PageContainer>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}